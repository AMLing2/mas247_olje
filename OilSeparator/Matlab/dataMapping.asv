clc; close all;

% Project - Oil Separator: Plotting

%% Test 1 - Tank 1
close all;

figure
title("Oil Separator: Data Logging - Tank 1 mapping")
xlabel("Time [seconds]")
hold on

yyaxis left
ylabel("Output [bits]")
plot(Test1Tank1.Time0/1000, ...
    Test1Tank1.LT1percent, '-b');

yyaxis right
ylabel("Measured height [cm]")
yline(0, '--r');
yline(4.4, '--r');
yline(5.7, '--r');
yline(9.1, '--r');
yline(11.1, '--r');
yline(15.1, '--r');
yline(16.9, '--r');
axis([0 Test1Tank1.Time0(end)/1000 3.7 17 ])

legend('Level Transmitter 1', 'Location', 'southeast')

%% Test 2 - Tank 2, water section

figure
title("Oil Separator: Data Logging - Tank 2 mapping")
xlabel("Time [seconds]")
hold on

yyaxis left
ylabel("Output [bits]")
plot(Test2Tank2.Time0, ...
    Test2Tank2.LT2percent, '-b');

yyaxis right
ylabel("Measured height [cm]")
yline(0, '--r')
axis([0 Test2Tank2.Time0(end) 0 17 ])

legend('Level Transmitter 2', 'Location', 'southeast')

%% Open Loop Step Response
close all; clc;

% ------------------- PDT1 ----------------
figure
title("Oil Separator: Open Loop Step Response - PDT1")
xlabel("Time [seconds]")
hold on

yyaxis left
ylabel("Input")
plot(OpenLoopStepResponseV3.Time0/1000, ...
     OpenLoopStepResponseV3.Motor_ON_OFF, 'b--')
ylim([-0.12 1.05])

yyaxis right
ylabel("Measured Pressure [bar]")
plot(OpenLoopStepResponseV3.Time0/1000, ...
     OpenLoopStepResponseV3.PDT1bar, 'r-')
legend('Step Response', 'PDT1', 'Location', 'southeast')
ylim([0 0.31])
xlim([0 130.229])

% ------------------- LT2 ----------------
figure
title("Oil Separator: Open Loop Step Response - LT2")
xlabel("Time [seconds]")
hold on

ylabel("[%]")
plot(OpenLoopStepResponseV3.Time0/1000, ...
     100*OpenLoopStepResponseV3.Motor_ON_OFF, 'b--')

plot(OpenLoopStepResponseV3.Time0/1000, ...
     100*(OpenLoopStepResponseV3.LT2mm-42)/(155.42-42), 'r-')
%ylim([35 165])

legend('Step Response', 'LT2', 'Location', 'southeast')

% ------------------ Ziegler Nichols calculations ------------------
U = 100;
%dt = 0.01;          % [sec] step size
%stepTime = 9740;    % [ms]
%data = OpenLoopStepResponseV3.LT2mm;
%time = OpenLoopStepResponseV3.Time0/1000;   % [seconds]

%derivativeArray = [ 0; diff(data)/dt];
%[R, index] = max(derivativeArray);  % ----- RISE TIME R -----

%b = data(index) - R*time(index);  % y = R*x + b
%y = R * time + b;   % Value of derivative @ max
%ii = find(y > 42, 1);    % Find intersection of horisontal axis and y line
%L = time(ii) - stepTime;    % ----- DEAD TIME L -----

% Did readings instead from display, since the derivative skyrocketed with
% the noise.

%L = 40.86 - 9.74;
%L = 18.87 - 9.74;
L = 43.26 - 9.74;
%R = (110.48 - 74.97686)/(81.49 - 60.18);
%R = (105.1 - 40.09)/(0.26658 - 0.0797);
R = (56.2723 - 24.8485)/(78.57 - 57.8);

Kp = 1.2 / (L*R/U); % From formulas
Ti = 2*L;           % From formulas = Tn
Td = L/2;           % From formulas

Ki = Kp/Ti;
Kd = Td/Kp;

% Display results:
table(Kp, Ti, Td, Ki, Kd)   % Tn = Ti, Tv = Td

% ------------------ Ziegler Nichols calculations ------------------

%% Testing
close all;

close all;

figure
title("Oil Separator: Pressure Differential Transmitter 1")
xlabel("Time [seconds]")
hold on

yyaxis left
ylabel("Output [bits]")
plot(Test1Tank1.Time0/1000, ...
    Test1Tank1.LT1percent, '-b');

yyaxis right
ylabel("Measured height [cm]")
yline(0, '--r');
yline(4.4, '--r');
yline(5.7, '--r');
yline(9.1, '--r');
yline(11.1, '--r');
yline(15.1, '--r');
yline(16.9, '--r');
axis([0 Test1Tank1.Time0(end)/1000 3.7 17 ])

legend('Level Transmitter 1', 'Location', 'southeast')

%% Calculations
clc; close all;
format long
rhoWater = 998;
rhoOil   = 857;
g = 9.80665;
PDTmax = 0.4;
PDTmin = 0.004;
dPDT = PDTmax-PDTmin;
bitMax = 2^15 - 1;
bitMin = 700;
dBit = bitMax;
A = 1/(g*(rhoWater - rhoOil));
B = rhoOil/(rhoWater - rhoOil);
C = 1-29/30.8;
R = 0.9/33.22;
% Variables to change
    PDT1bit = 14290;
    LT2mm   = 87;
% Variables to change
LT2m = LT2mm/1000;
PDT1bar = PDT1bit*(dPDT*R/dBit);
PDT1Pa  = PDT1bar*10^5;
    PDT1calc = rhoWater*g*LT2m;

h_water = ((PDT1Pa*A) - (LT2m*B))*1000.0;

    table(PDT1Pa, PDT1calc);
    Cinv = PDT1Pa/PDT1calc;
    C1 = 19.968619416961648;
    C2 = 20.282442997341011;
    C3 = 19.831767100422518;
    C_fin = (C1+C2+C3)/3;

    h_waterTC1 = ( (PDT1bar * (100000.0) * A)  - (LT2mm * (1.0/1000.0) * B))*1000.0;
    h_water2 = (PDT1Pa*(1/(g*(rhoOil-rhoWater))) - LT2m*(rhoWater/(rhoOil-rhoWater)))*1000
    h_water1 = (PDT1Pa*(1/(g*(rhoWater-rhoOil))) - LT2m*(rhoOil/(rhoWater-rhoOil)))*1000
h_oil = LT2m*1000 - h_water;
h_tot = h_water + h_oil;
format short
table(h_water, h_oil, h_tot)

%% Clean Water Calibration
close all;
figure(Name='Clean Water Calibration')

SensorBit = [726, 2940, 4780, 7150, 9740, 13035, 14970, 17110, 18135];
hMeasured = [0, 26, 37, 52, 69, 89, 101, 115, 122]; 

SensorBit2 = [2940, 4780, 7150, 9740, 13035, 14970, 17110, 18135];
hMeasured2 = [26, 37, 52, 69, 89, 101, 115, 122];
pMeasured2 = rhoWater*g*hMeasured2/1000.0;

rhoWater = 998; % [kg/m^3]
g = 9.80665;    % [m/s^2]
pMeasured = rhoWater*g*hMeasured/1000.0;

plot(SensorBit, pMeasured)
xlabel('[bit]')
ylabel('[Pa]')

dx = SensorBit(end) - SensorBit(2);
dy = pMeasured(end) - pMeasured(2);
slope = dy/dx;

figure(Name='Linear Regression')
y = slope*SensorBit;
plot(SensorBit, y)

C = y(end) - SensorBit(end)*slope;

y2 = slope*(SensorBit+SensorBit(1));

k = 0.06172;
b = 69.67;
y3 = k*SensorBit + b;

figure(Name='Final both')
hold on
plot(SensorBit, pMeasured)
plot(SensorBit, y3)
xlabel('[bit]')
ylabel('[Pa]')
legend('Measurements', 'Linear regression', 'Location','southeast')

%% Ziegler Nichols tuning: Thursday

LT2min = 43.4;
LT2max = 156.84;

figure(Name='Ziegler Nichols Tuning: LV1 in, LT2 out')
title("Ziegler Nichols Tuning: LV1 in, LT2 out")
xlabel("Time [seconds]")
hold on

ylabel("[%]")

plot(ZieglerNicholsThursday.Time0/1000, ...
     ZieglerNicholsThursday.Level_Valve_1_Percentage)

plot(ZieglerNicholsThursday.Time0/1000, ...
     100*(ZieglerNicholsThursday.LT2mm-LT2min)/(LT2max-LT2min), 'r-')

xlim([33 212])
ylim([-5 105])
legend('Step Response', 'LT2', 'Location', 'southeast')


% ------------------ Ziegler Nichols calculations ------------------
    % Read from graph
U = 1
L = 66.62 - 53.25;
R = (56.2723 - 24.8485)/(78.57 - 57.8);

Kp = 1.2 / (L*R/U); % From formulas
Ti = 2*L;           % From formulas = Tn
Td = L/2;           % From formulas

Ki = Kp/Ti;
Kd = Td/Kp;

% Display results:
table(Kp, Ti, Td, Ki, Kd)   % Tn = Ti, Tv = Td

% ------------------ Ziegler Nichols calculations ------------------
