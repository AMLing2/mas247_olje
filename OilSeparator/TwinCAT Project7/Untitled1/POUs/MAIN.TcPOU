<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{75317203-8f43-4932-aa88-c7b05e9ca563}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	// ------ Linking variables to IO cards ------
		// --------- Outputs ---------
	Flow_Valve_1 	AT %Q* : INT;
	Level_Valve_1 	AT %Q* : INT;
	Level_Valve_2 	AT %Q* : INT;
	Level_Valve_3 	AT %Q* : INT;
	Gas_Valve 		AT %Q* : INT;
	Mixer_Valve 	AT %Q* : INT;
	Motor_speed 	AT %Q* : INT;	
	Motor_Direction AT %Q* : BOOL; 			// Don't touch
		// --------- Inputs ---------
			// Buttons
	Toggle_Button 	AT %I* :BOOL;	// Normally Open  (OFF), Green
	Reset_Button 	AT %I* : BOOL; 	// Normally Closed (ON), Red
	EMERGENCY_STOP 	AT %I* : BOOL; 	// Normally Closed (ON), Emergency Switch
			// Sensors
	Level_Transmitter_1 	AT %I* :INT;
	Level_Transmitter_2 	AT %I* :INT;
	Temperature_Transmitter AT %I* :INT;
	Pressure_Differencial_Transmitter_1 AT %I* : INT;
	Pressure_Differencial_Transmitter_2 AT %I* : INT;
	Pressure_Transmitter_1 AT %I* : INT ;
	Pressure_Transmitter_2 AT %I* : INT ;
	Pressure_Transmitter_3 AT %I* : INT ; 
	// ------ Linking variables to IO cards ------
	
		// Toggle Motor Statee with green button
	risingEdge : R_TRIG;
	elapsedDebounce : TIME;
	toggleMotor : BOOL;
	
	// ------------------ HMI ------------------
	Motor_ON : BOOL; 				// For HMI button
	ON_OFF 	 : STRING(10) := 'OFF'; // For HMI text
	// ------------------ HMI ------------------
	
	// Emergency System
	alarmSystem : FB_AlarmSystem;
	
	// Initializer
	init : BOOL := FALSE;
	mainInitializer : FB_defaultValues;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// ======================== Initializer ========================
	IF NOT init THEN
		mainInitializer(MotorState  := gAL.Motor_ON_OFF,
						MotorSpeed  := gAL.Motor_speed_Percentage,
						FV1_Percent := gAL.Flow_Valve_1_Percentage,
						LV1_Percent := gAL.Level_Valve_1_Percentage,
						LV2_Percent := gAL.Level_Valve_2_Percentage,
						LV3_Percent := gAL.Level_Valve_3_Percentage);
		init := TRUE;
	END_IF
// ======================== Initializer ========================

// ======================== Alarm System ========================
	alarmSystem(ClearButton := Reset_Button,
				EmergencyButton := EMERGENCY_STOP);
// ======================== Alarm System ========================
	
// ================ Outer bounds logic (outputs) ================
IF gAL.Flow_Valve_1_Percentage > 100 THEN
	gAL.Flow_Valve_1_Percentage := 100; 
	ELSE IF gAL.Flow_Valve_1_Percentage < 0 THEN 
		gAL.Flow_Valve_1_Percentage := 0; 
	END_IF
END_IF

IF gAL.Level_Valve_1_Percentage > 100 THEN
	gAL.Level_Valve_1_Percentage := 100; 
	ELSE IF gAL.Level_Valve_1_Percentage < 0 THEN 
		gAL.Level_Valve_1_Percentage := 0; 
	END_IF
END_IF

IF gAL.Level_Valve_2_Percentage > 100 THEN
	gAL.Level_Valve_2_Percentage := 100; 
	ELSE IF gAL.Level_Valve_2_Percentage < 0 THEN 
		gAL.Level_Valve_2_Percentage := 0; 
	END_IF
END_IF

IF gAL.Level_Valve_3_Percentage > 100 THEN
	gAL.Level_Valve_3_Percentage := 100; 
	ELSE IF gAL.Level_Valve_3_Percentage < 0 THEN 
		gAL.Level_Valve_3_Percentage := 0; 
	END_IF
END_IF

IF gAL.Motor_speed_Percentage > 100 THEN
	gAL.Motor_speed_Percentage := 100; 
	ELSE IF gAL.Motor_speed_Percentage < 0 THEN 
		gAL.Motor_speed_Percentage := 0; 
	END_IF
END_IF
// ================= Outer bounds logic (outputs) ================
// ===================== Percentage to bits =====================
// Flow_Valve_1 calibration
Flow_Valve_1 := REAL_TO_INT (262.14*gAL.Flow_Valve_1_Percentage +6553 ); 
// Level_Valve_1 calibration
Level_Valve_1 := REAL_TO_INT(262.14*gAL.Level_Valve_1_Percentage +6553);
// Level_Valve_2 calibration
Level_Valve_2 := REAL_TO_INT(262.14*gAL.Level_Valve_2_Percentage +6553);
// Level_Valve_3 calibration
Level_Valve_3 := REAL_TO_INT(262.14*gAL.Level_Valve_3_Percentage +6553);

// Motor_speed calibration
Motor_speed := REAL_TO_INT(262.14*gAL.Motor_speed_Percentage +6553);
// ===================== Percentage to bits =====================

	// Toggle motor state with green button
risingEdge(CLK := Toggle_Button,
		   Q => toggleMotor);
IF toggleMotor THEN
	gAL.Motor_ON_OFF := NOT gAL.Motor_ON_OFF;
END_IF

// ======================== HMI Display ========================
 // Start motor?
IF gAL.Motor_ON_OFF   THEN
    Motor_ON   :=  FALSE;		// Button display
	ON_OFF  := 'MOTOR: ON' ;	// Text display
	
ELSE
    Motor_ON  := TRUE;			// Button display
	ON_OFF  := 'MOTOR: OFF' ;	// Text display
END_IF
// ======================== HMI Display ========================
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="1431" Count="1" />
      <LineId Id="1434" Count="0" />
      <LineId Id="1565" Count="4" />
      <LineId Id="1435" Count="0" />
      <LineId Id="1443" Count="0" />
      <LineId Id="1436" Count="0" />
      <LineId Id="1433" Count="0" />
      <LineId Id="1177" Count="0" />
      <LineId Id="1179" Count="0" />
      <LineId Id="1272" Count="0" />
      <LineId Id="1426" Count="0" />
      <LineId Id="1374" Count="0" />
      <LineId Id="1199" Count="0" />
      <LineId Id="1178" Count="0" />
      <LineId Id="170" Count="4" />
      <LineId Id="44" Count="0" />
      <LineId Id="1503" Count="0" />
      <LineId Id="104" Count="4" />
      <LineId Id="101" Count="0" />
      <LineId Id="1502" Count="0" />
      <LineId Id="114" Count="4" />
      <LineId Id="112" Count="0" />
      <LineId Id="1501" Count="0" />
      <LineId Id="121" Count="4" />
      <LineId Id="111" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="142" Count="4" />
      <LineId Id="40" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="1489" Count="11" />
      <LineId Id="1203" Count="0" />
      <LineId Id="1626" Count="0" />
      <LineId Id="1621" Count="0" />
      <LineId Id="1615" Count="0" />
      <LineId Id="1638" Count="0" />
      <LineId Id="1642" Count="2" />
      <LineId Id="1427" Count="0" />
      <LineId Id="201" Count="3" />
      <LineId Id="213" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="205" Count="1" />
      <LineId Id="214" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="1270" Count="0" />
      <LineId Id="269" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>